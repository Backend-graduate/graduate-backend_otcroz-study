paths:
  /api/users/total:
    get:
      summary: "전체 유저 조회"
      description: "get 요청, 전체 유저를 확인할 수 있는 라우터"
      tags: [User]
      response:
        "200":
          description: "유저 전체 정보"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              user:
                type: object
      responses:
        "200":
          description: "유저 정보 조회"
          schema:
            type: object
            properties:
              success:
                type: boolean
              userInfo:
                type: object
  /api/users/user/{email}:
    get:
      summary: "유저 정보 불러오기"
      description: "get 요청, 특정 유저의 정보를 확인할 수 있음"
      tags: [User]
      parameters:
        - name: "email"
          in: "path"
          required: true
          description: "특정 유저 정보"
          schema:
            type: string
          examples:
            Sample:
              value: "uxoouxoo00@duksung.ac.kr"
              summary: "지금 db에 존재하는 유저 이메일"
      responses:
        "200":
          description: "특정 사용자 정보 조회"
          schema:
            type: object
            properties:
              success:
                type: boolean
              userInfo:
                type: object
  /api/users/register:
    post:
      summary: "회원 등록"
      description: "post 방식, 회원 정보를 입력하여 회원 등록 실행"
      tags: [User]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
                age:
                  type: string
                mbti:
                  type: string
              example:
                email: "uxoouxoo00@gmail.com"
                name: "유수연"
                age: 23,
                mbti: ENFJ
      responses:
        "200":
          description: "회원 등록 성공"
